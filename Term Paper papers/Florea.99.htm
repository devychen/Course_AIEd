<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<!-- saved from url=(0049)https://turing.cs.pub.ro/ai_mas/papers/japan.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
   
   <meta name="Generator" content="Microsoft Word 97">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (Win98; U) [Netscape]">
   <title>An Agent-based Collaborative Learning System</title>
</head>
<body link="#0000FF">

<center><b><font size="+3">An Agent-based Collaborative Learning System</font></b>
<p><b>Adina Magda Florea</b>
</p><p><i>"Politehnica" University of Bucharest,</i>
<br><i>E-mail: <a href="mailto:adina@cs.pub.ro">adina@cs.pub.ro</a></i>
<br><a href="http://turing.cs.pub.ro/~adina">http://turing.cs.pub.ro/~adina</a></p></center>

<p><i><font color="#993300"><font size="-1">Extended version of the paper
"An agent-based collaboration learning system", A. Florea, published in
Proceedings of ICCE99, The 7th International Conference on Computers in
Education, Chiba, Japonia, 4-7 November 1999, p.161-164.</font></font></i>
</p><p><b><i><font face="Arial">Abstract</font></i></b>
</p><p><font size="-1">The paper presents a collaborative on-line learning system
for open and distance learning that tries to respond to the requirements
of an efficient and motivating learning process. The system comprises several
learning modes that try to combine the traditional style of teaching with
“problem-based” learning: learning by being told, problem-centred demonstrations,
problem analysis, and assessment of acquired knowledge. A fifth mode, creative
problem solving, as an essential part of the learner-centred approach,
will be supported by future versions of the system. Cooperative learning
is achieved either between the student and the tutor or inside a group
of learners interacting or not with the human tutor. Student interactions
with the system may be either synchronous or asynchronous. The system is
a CSCW environment enhanced with artificial agents that represent an active
part in the learning process. It includes personal agents to assist the
students and the human tutor, an artificial tutor that tries to partially
replace the human one during student interactions with the system, and
an information agent to search relevant information.</font>
</p><p><font size="-1"><i>Keywords:</i> <b>Computer Supported Collaborative Learning,
Agent Architecture, Pedagogical Agent</b></font>
<br>&nbsp;
<br>&nbsp;
</p><p><b><i><font face="Arial">Introduction</font></i></b>
</p><p><font size="-1">The development of the New Information Technologies not
only bring ever more ambitious and complex challenges in everyday life
and work, but also provide means and tools to meet such challenges. Nowadays,
the current state of the art changes so fast in most fields of human activity
that the professional qualification is no longer a lifetime acquisition.
Just periodically up-dating knowledge and skills acquired during the years
of professional training is no longer good enough. Ever larger socio-professional
groups have to adopt the drastic solution of re-orienting themselves towards
completely different, newly emerging domains. To develop and maintain the
aptitude of the labour force in such a competitive and ever changing environment,
efficient computer based teaching/learning systems have to be developed
to complement or to substitute traditional teaching in different forms
of education. Efficiency, scientific and pedagogical quality, affordability
and user-friendliness are the basic requirements of such systems.</font>
</p><p><font size="-1">To increase the efficiency of learning and to commit the
student, the new educational paradigm of “learner-centred”, “participative
learning”, and “problem-based” learning has began to show its merits. The
goal is active exploration, construction, and active learning rather than
the passive attendance of lectures or textbooks reading [NS96]. The NIT
offers the premises and means to develop educational systems based on such
a paradigm. In the same time, as in any other human activity, collaboration
in knowledge acquisition is an important dimension of the learning process.
Communication through computer networks, be they Internet or Intranets,
permit the learners to collaborate with others in solving problems, to
explore new means of communication and information access, and to develop
group reasoning skills.</font>
</p><p><font size="-1">The paper presents a collaborative on-line system for
open and distance learning that steamed from the requirements of an efficient
and motivating learning process. The first section of the paper summarises
the current views of learning and teaching that have shaped the pedagogical
strategies and the design of the system. The next section describes the
basic functionality of the system and how different learning and instructional
modalities are achieved. Next, the presentation is geared on how the artificial
agents in the system actively support the learner, relieve the learner
of routine tasks in the learning process, and try to partially replace
the human tutor. The paper ends by discussing some elements of the system
interface that support collaboration and related work.</font>
</p><p><b><i><font face="Arial">Current Perspective on Learning and Teaching</font></i></b>
</p><p><font size="-1">Knowledge that is accessed or transmitted but never put
to use during learning may be difficult to remember or use properly afterwards,
in real-life situations. In the same time, people learn best when motivated
by a certain task or challenge, or when they need knowledge and skills
to solve a problem at hand. Most of the current teaching is focused on
the content of the curriculum, structured around basic topics of a discipline.
Although this is and will definitively remain an essential aspect of teaching,
the learner-centred approach must necessarily complement the current way
of teaching. We are thus witnessing to a shift from the paradigm of “the
sage on the stage” to the one of “the guide on the side”, in which the
learning process is centered towards the learner and his/her active participation
in the learning process. The idea of participative learning is supported
by the construstivism approach, a fundamental viewpoint about the nature
of knowledge acquisition. Constructivism is a set of beliefs about knowing
and learning that emphasises the active role of learners in constructing
their own knowledge [Res87, Gla89]. The construction of knowledge is viewed
to be the result of a learner's attempts to use his/her existing knowledge
to make sense of new experiences. This entails both the modification of
concepts and the reorganisation of knowledge structures. Although teaching
can facilitate the construction of knowledge, it is not the direct consequence
of a simple knowledge transmission process.</font>
</p><p><font size="-1">Despite an important number of computer-based learning
tools, open environments for learning and on-line learning materials, the
pedagogical approach followed by most of these tools is still much influenced
by the traditional style of teaching, namely knowledge and information
transmission. Participative and cooperative learning has been only recently
considered as an important asset in computer-based learning, creating thus
the premises of shifting to the “problem-based” and cooperative paradigms
in computer-based learning.</font>
</p><p><font size="-1">On the other side, computer-based learning and ODL need
to provide tutorial support to students, typically in the form of a human
who can answer questions, provide help and guidence. This limits the number
of people who can participate simultaneously in ODL training as it is difficult
to supply human assistance in a timely manner to remote users in different
time zones. Assisting, complementing, and partially replacing the human
tutor by automatic tools in such environments seems to be the answer to
this problem, but artificial intelligent tuturs are difficult to develop.
There is still a long way to go before achieving the “human” dimension
of “computerised” education and training. Considering the important progresses
of artificial intelligence which have brought the basic research in the
field to everyday life and real-world applications, the lack of “intelligence”
of the computer-based learning tools currently available is really surprising.
It is our aim to develop a computer supported system that will combine
the traditional teaching approach with the “problem-based” and “learner-centred”
paradigm of learning and to gradually introduce in the system artificial
intelligent components that will add the “human-like” lacking dimension
to the computerised learning process. Because the system is open and distributed,
artificial intelligent agents seem to be a promising solution in achieving
the proposed goal.</font>
</p><p><b><i><font face="Arial">Functionality of the Collaborative Learning
System</font></i></b>
</p><p><font size="-1">This section presents the basic functionality of a collaborative
on-line learning system for open and distance learning that steamed from
the requirements of an efficient and motivating learning process presented
above. The learning system is a CSCW (Computer-Supported Cooperative Work)
environment in which group interactions may take place in the same location
or in geographically dispersed locations, at the same time (synchronous
mode) or at different times (asynchronous mode). In the system, cooperative
learning is achieved either between the student and the tutor/expert or
inside a group of learners interacting or not with the human tutor. The
system comprises an artificial tutor (the Tutor Agent) that tries to partially
replace the human one during the student interactions with the system.</font>
</p><p><font size="-1">The system comprises several learning modalities that
try to combine the traditional style of teaching with the “problem-based”
and “learner-centred” style. To support the perspective on learning and
teaching presented before, we have identified the following learning modalities:
learning by being told, problem-centred demonstrations, problem analysis,
assessment of acquired knowledge, and creative problem-solving.</font>
</p><p><font size="-1">The <b>learning by being told</b> modality corresponds
to presentation of “classical” on-line materials, such as course notes
or slide-show, but augmented with selective inspection of the materials
depending on student answers to different questions and exercises. The
<b>problem-centred demonstration </b>level implies the demonstration of
how one particular problem is solved by the tutor, be it human or artificial.
This refers to either setting up the parameters of a pre-existing program,
running the program and visualising the results or executing a plan to
achieve the goals of a given problem.</font>
</p><p><font size="-1">The <b>problem analysis</b> modality corresponds to the
analysis of a solution proposed either by the tutor or by a student. This
involves critiquing the undertaken decisions and explaining the rationale
behind these decisions.</font>
</p><p><font size="-1">The <b>assessment of acquired knowledge </b>level implies
both self-assessment and assessment of the student performances, either
automatically or by the system-assisted human tutor. We consider the self-assessment
level as one of the learning modalities of the system as feedback on the
acquired knowledge enhances the learner's motivational beliefs.</font>
</p><p><font size="-1"><i>The </i><b>creative problem solving </b>modality implies
the student being in control and solving the problem, individually, in
cooperation with the tutor (artificial or human), and/or in cooperation
with other students in the system. By creative problem solving we mean
two levels of learning behaviour: learning by solving problems and learning
by discovering new ways to solve a problem or new explanations to a problem
solution. For the time being, the system supports only the first four modalities
but provisions were made to integrate the creative problem solving modality
in the future.</font>
</p><p><font size="-1">In the <b>learning by being told </b>modality, which corresponds
to the “traditional’ style of lecturing, on-line interactions and feed-back
are provided to enhance the pedagogical value of the environment based
on CSCW characteristics. The presented material is organised along several
conceptual paths: the content path, which can be explored at compulsory,
optional, or advanced presentation level of the material, and the concept
path in which the student is following the presentation and use of a concept
throughout the entire learning material. Roadmaps are associated to each
of the conceptual paths the student may follow, to facilitate the process
of knowledge organisation and concept formation. When following the content
path, the student is presented with some questions or simple exercises,
at the end of each chapter or section, to test his/her progress in understanding
the presented knowledge. According to the quality of the answers, the student
is advised to go again through parts of the material. This first level
steams from the work in [Flo99a, Flo99b].</font>
</p><p><font size="-1">The second modality implies the <b>demonstration</b> of
how one particular problem is solved. The demonstration may be performed
by the tutor, by a student, or by a group of students that may or may be
not assisted by the tutor. The demonstration may refer to setting up the
parameters of a program, running the program and visualising the results,
or to executing a plan to achieve the goals of a given problem. This level
corresponds thus to taking a pre-existing solution for a given type of
problem, tuning the solution by specifying particular parameters or features
for the particular problem instance, applying the solution to solve the
problem, and visualising the results. Result visualisation may be followed
by the interpretation of results. The students may collaboratively participate
in setting up the initial parameters of the problem solving paradigm and
interpreting the results. The human or artificial tutor may also collaborate/help
the students in selecting the appropriate values. Shared visualisation
of initial parameter settings and of the obtained results facilitates collaboration
in learning. The interpretation of results is mainly performed through
the chat-like facility of the system by communication among students, with
the synchronous or asynchronous presence of the human teacher. The artificial
tutor may also give limited interpretation, depending on the particular
problem. The demonstration experiment can be recorded in the system to
be later used by other learners in asynchronous mode interaction. In asynchronous
mode, a learner may either try and perform his own demonstration or, alternatively,
may investigate previous demonstrations performed in the system either
by the tutor, or by the peer learners.</font>
</p><p><font size="-1">As stated before, the <b>problem analysis</b> modality
corresponds to the analysis of a solution proposed either by the tutor
or by a student. For the time being, the proposed solutions may be selected
from an existing repertoire of generic problem solutions that may be tailored
according to the tutor or student options. In fact, this third level comprises
problem centred demonstration followed by the collaborative analysis and
explanation of the proposed solution and obtained results. The problem
to be analysed is presented to the students in terms of: problem specification,
the main steps that lead to the problem solution, the selected input values
for the problem parameters, the obtained results, a set of possible underlying
principles that might have been used for solving the problem, and a set
of possible concepts that might be useful for understanding the problem
solution. The students have to select, among the possible choices, the
principle/principles that were used in solving the problem and the most
relevant concepts that support the problem solving process. The human or
artificial tutor may be addressed in case of uncertainty by the hint or
explanation facilities of this learning modality.</font>
</p><p><font size="-1">The analysis of solution steps and of the correlation
between selected input values and obtained results is carried out by direct
communication through the chat-like facility in which several users, including
the tutor, contributes with their opinions and critiques to the analysis.
In order to support the analysis, the tutor or learners in the system may
invoke a search facility (the Information Agent) to perform search of relevant
information either on the learning material available in the system or
on the Web. The tutor has the possibility to select relevant parts of the
collaborative problem analysis and record them in the system, along with
the corresponding demonstration, so as to enable other learners to investigate
the results at a later time. The selections of principles and concepts
performed by the students may also be recorded in the system, to be used
either for collaborative learning in asynchronous mode or for student performance
assessment.</font>
</p><p><font size="-1">For the time being, we have concentrated on two particular
subjects to be developed in the framework of the collaborative learning
system: sorting algorithms and resolution theorem proving [Llo84]. We use
the second subject to be more precise in specifying the problem analysis
modality. For a given set of clauses, the problem specification implies
the presentation of the problem in natural language, the formalisation
of the problem in first order predicate logic (FOPL) and the equivalent
set of clauses that resulted from the transformation of the FOPL form.
The input parameters to be collaboratively set are: the inference rule/rules
to be used in demonstration, including answering, the resolution strategy,
the top clause for linear strategy or the set of support for the set of
support strategy, the maximum number of generated resolvents or maximum
depth of the proof tree. The obtained results refer to the clause that
finally generated the empty clause, the number of generated clauses, the
number of clauses that were kept after elimination, the number of unification
attempts, the depth of the proof tree, the obtained answers if any. The
steps that lead to the problem solution are synthesised by the proof tree.
The underlying principles that are presented to the student to choose from
comprise several levels of detail, namely principles that refers to general
theorem proving methods, to particular resolution strategies indicated
by corresponding definitions, to correlation between particular strategies
and types of clauses in the problem instance. Among the concepts to be
selected are inference rule, strategy, completeness, consistency, termination
conditions, decidability, etc. Several details on how these different learning
modalities are supported by intelligent agents will be given in the next
section.</font>
</p><p><font size="-1">The forth modality corresponds to the <b>assessment </b>of
student acquired knowledge. The exercises have different levels of difficulty
and are indexed accordingly, both for the student and in the system. The
answers to the exercises are: select a choice among several possible answers,
match answers to multiple questions, input a text formed of predefined
words in a table, input a formula (which will trigger lexical and syntactic
analysis). The assessment part may be entered either in practice mode (self-evaluation)
or in evaluation mode. When entering the practice mode, the student has
available on the screen follow-up links to relevant parts of the learning
material available in the system to help him in selecting the correct answer.
In the same time, the student has the possibility to retrieve instances
of problem-centred demonstrations and problem analysis, to further guide
him in selecting the answer. The system records the number of correct or
incorrect answers and computes the total number of points, which corresponds
to the student evaluation. The assessment part is also based on the work
in [Flo99a, Flo99b]. For the time being, the assessment of acquired knowledge
is conceived to be performed only at the individual level of the student,
but we foresee to extend the conception and design of this forth modality
such as to support collaboration in evaluation and collective evaluation
of the performance level of a group of students.</font>
</p><p><b><i><font face="Arial">Agents to Support the Learning Task</font></i></b>
</p><p><font size="-1">The architecture of the system is a multi-agent one, human
and artificial agents collaborating together to achieve the learning task.
There are several agents in the system, as depicted in Figure 1. A learner
in the environment is endowed with his own digital personal agent. A dedicated
window can be activated when the user wants to interact with his personal
agent (<i>PerA</i>) but the <i>PerA</i> may react and make the learner
aware of its presence when relevant information has to be communicated.
The <i>PerA</i> is responsible for monitoring the user’s actions, for creating
the learner’s profile and preference profile, for providing data to the
management component to create the learner’s history (to be detailed in
the sequel), and for entering in dialogue with the <i>PerA</i>s of other
learners.</font>
</p><p><font size="-1">The Personal Agents are also responsible for retrieving
pre-existing solution for a given type of problem and managing communication
and interactions while the user in engaged in the problem-centred or problem
analysis modalities of learning. They can be instructed to save learning
experiences, such as particular parameters setting and associated results.
The tutor in the learning system has also his personal agent, which is
similar to the other <i>PerAs</i>, but without the function of creating
the learner’s profile or history. This uniformity in treating the personal
agents facilitates communication and coordination in the system. The user
is communicating with his personal agent by means of a menu-driven approach,
while the <i>PerA</i> is displaying information and comments in natural
language. We are currently considering adding a voice facility to the <i>PerA</i>
to make the learner or teacher aware of important events in the system
even if he/she is concentrating on a particular task.</font>
</p><p><font size="-1">A second agent in the system is the artificial tutor,
namely the Tutor Agent (<i>TutA</i>). The <i>TutA</i> is capable of assisting
the students and partially replacing the teacher. While in the first modality,
when the student is answering to questions and exercises associated to
the in-line course material, the Tutor Agent may suggest what parts or
relevant topics of the course the student has to revise, depending on given
answers but also considering the learner’s history. The <i>TutA</i> can
also assist students in the system during the application of the second
and third modality of teaching, namely problem demonstration and problem
analysis. It can participate to the initial settings of the problem parameters,
it can contribute (partially) to the interpretation of results, and it
can give hints or explanations about what principles or concepts are most
relevant to the problem at hand. These activities are also correlated to
the learning profile of the student. For example, when making suggestions
about how to set initial parameters, the Tutor Agent will advice the student
more or less, depending on the learner’s profile developed until the time
being.</font>
</p><p><font size="-1">For a given category of problems, the <i>TutA</i> has
an internal symbolic representation of the problem solution, causal links
that connect problem characteristics and possible categories of input values
to concepts and principles used in the problem, and standard (limited)
explanations to be selected for a certain class of results. For example,
considering again the resolution theorem proving subject, the TutA may
have the standard explanation that the SLD resolution [Llo84] is not adequate
to be used to prove a particular set of clauses because they are not Horn-like.
The predefined categories of problems, with associated representations
for solutions, causal links, concepts and principles, are stored in a knowledge
base that can be accessed both by the human users and by the Tutor Agent.
The Tutor Agent is mainly built-in but it has also limited capabilities
of learning from the human tutor how to contribute to the problem parameter
settings by applying a variation of the ID3 algorithm [Qui86, FM96]. Several
more sophisticated machine learning algorithms and deep representation
of the problem solution will be included to increase the competence and
efficiency of the artificial tutor.</font>
</p><p><font size="-1">The artificial tutor may be activated on demand, either
by a student of by the teacher. The interaction between the Tutor Agent
and the learners has the advantage of always being in synchronous mode.
The interface between the learner and the <i>TutA</i> is realised also
by the <i>PerA</i> of the learner. The <i>PerA</i> is responsible for calling
the <i>TutA</i> to be active part of the learning process, and thus to
assist the student. In the same time, the <i>TutA</i> will query the <i>PerA</i>
of a learner on the student profile, so as to tailor its advice according
to the abilities of the learner.</font>
</p><center>
<p><img src="./Florea.99_files/image1.gif" height="487" width="650">
</p><p><font size="-1">Figure 1. Agent-based collaborative learning in the system</font></p></center>

<p><font size="-1">A third agent in the system is the information agent (<i>InfoA</i>)
which is responsible of retrieving and filtering information from specified
sources that can range from the learning materials and experiences available
in the system to the entire Web. The filtering criteria may be specified
by the learner when calling the <i>InfoA</i>, may be retrieved from the
preference profile of the user (provided by the user’s <i>PerA</i>) or
may be created as a combination of the two (by user we mean either a student
or the human tutor). Extra details on how the <i>InfoA</i> and the user
preference profile are developed are outside the scope of this paper.</font>
</p><p><font size="-1">The learner’s history refers to several aspects of previous
student-system interactions and comprises the learning profile of a student
(which is different from the preference profile). The learner’s history
includes the numbers, dates, and modes (synchronous or asynchronous) of
the student sessions with the system, the level of achievement in self-evaluation
and evaluation mode, the selected modalities of learning during each session,
peer learners in the group while engaged in collaborative learning, and
how often the learner asked for assistance to the artificial tutor. The
learning profile of a student is a qualitative synthesis of some of these
quantitative elements, including, for the time being, the level of achievement
of the student, namely beginner, intermediate of advanced, preferences
for individual or group learning, preferences for the learning modalities
in the system, and level of requested assistance.</font>
</p><p><font size="-1">We are considering extending the learner profile with
several other qualitative features and we are currently working on a model
of a group profile in learning. This group profile will be used to correlate
the activity of the Tutor Agent with the level of knowledge of the group.
As the group profile will be accessible to the the human tutor, he may,
in this way, get a better understanding of the group with which he/she
is working. A further development of the system will be dedicated to conceive
and build an intelligent agent to assist students in creative problem solving
by collaboratively participating to the synthesis of the problem solution.</font>
</p><p><font size="-1">The system includes a management component which is responsible
for managing the system users, for example assigning login names and passwords,
and two databases existing in the system, namely: the learner’s history
database and the database with the recorded learning experiences. A third
database contains the learning profile of the students, but this database
is accessed by the personal agents of each user and by the Tutor Agent.</font>
</p><p><b><i><font face="Arial">System Interface</font></i></b>
</p><p><font size="-1">The system interface comprises several learning and communication
areas to support both individual and collaborative interactions (Figure
2). There are two types of areas in the user-system interface: one type
is represented by private areas that are to be viewed and managed only
by the individual user connected to the system, while the other is the
common type interface which corresponds to areas that are shared by all
users connected in the system in synchronous mode or where an individual
user can visualise previous collaborative experiences. For example, the
Private Work Area may be used by the student for private work, private
notes, etc.; the Private Learning Area may be used for browsing course
notes or for assessment. The Common Area for Parameter Settings is used
to collaboratively tune a solution for a specific problem instance, the
Common Chat Area for informal discussions among members of the group, and
the Common Area for Analysis (also chat-like but with possibilities to
be recorded in the system) to collectively analyse problem solutions. A
Coordination Area is used for showing and managing group interaction in
the system, namely: who is participating, who is inputting data of a form
or another, who is in control of the interaction at a given moment.</font>
</p><center>
<p><img src="./Florea.99_files/image2.gif" height="446" width="653">
</p><p><font size="-1">Figure 2. Components of the system interface and their
relationship to the learning modalities</font></p></center>

<p><b><i><font face="Arial">Related Work</font></i></b>
</p><p><font size="-1">The professor is conducting a class on how to solve a
problem collaboratively. It uses a part of the screen, seen by all students,
to formulate the problem and the stages necessary to follow for finding
the solution. In each stage, students are required to enter facts, ideas,
learning issues, and tasks in the shared area of the screen. The teacher
critiques each stage of the work then make assignments to teams of students
from the identified issues. A possible overview of a snapshot of such a
session is presented in Figure 2, which shares some elements with the Collaboratoty
Notebook product</font>
</p><p><font size="-1">The Multiple Case-based Approach to Generative Environments
for Learning (McBagel) of Georgia Institute of Technology in Atlanta is
an environment for synchronous collaboration where students gather for
brainstorming and planning activity and where a problem gets understood
and broken into solvable pieces (Gruzdial et. al., 1996). McBagel is based
on the problem-solving learning method and is used with success in medical
and business schools. Also from Georgia Tech is the Collaborative and Multimedia
Learning Environment (CaMILLE) which supports asynchronous collaboration:
students share resources found or invented while working separately. The
environment is used in mechanical design classes.</font>
</p><p><font size="-1">The Digital Agora project, developed at Acadia University
in Canada, provides a Web-based training system that facilitates the collaborative
analysis of complex problems, such as peace initiatives, bioethics questions,
consensus negotiation, and environmental issues. The Digital Agora (Watters,
Conley, and Alexander, 1998) allows users to access the huge amount of
information available on the Web in these areas, organize it, and work
collaboratively to understand and resolve problems concerning these complex
issues. The project supports Web-based hypertext design with authorship
of nodes and links, discussion groups, collaborative analysis and writing,
simulations, graphical representations of complex issues using lateral
maps, quizzes and evaluation.</font>
</p><p><font size="-1">The Royal Center for Learning and Academic Technologies
that serves Penn Sate’s 12-campus Commonwealth College plus four additional
undergraduate campuses, has developed Project Vision, a learning environment
for creating courses which integrates technology skill development and
use with content learning, requiring local and distributed team project
work, and building cooperative learning skills (Deden, 1998). In the beginning,
students take a first Vision course that teaches them how to use and evaluate
Internet tools and resources in research, abilities to communicate in a
computer environment, and requirements of Web-based presentations. They
can afterwards be enrolled in one of several subject-oriented Vision courses
that requires them to design case studies and work in a team, including
multidisciplinary teams. For example, students in computer science are
paired with philosophy students to produce multimedia interpretations of
the levels of hell in Dante’s Inferno.</font>
</p><p><font size="-1">The PuppetMaster which provides a high-level interpretation
and assesment of the students based on a model from reactive planning research,
namely the situation space. PuppetMaster is a pedagogical agent used in
virtual world simulation for training of military tank crews.</font>
</p><p><font size="-1">Models of Online Courses which discusses characteristics
of new learning environments, including the pedagogical evolution of on-line
course materials, and issues in teaching and learning online.</font>
</p><p><font size="-1">In [WM98] is an interesting presentation of a methodology
for approaching the problem of migrating a course from the classroom to
the Web, including four main learning modes : passive presentation, high-level
interactive demonstrations, student led practical exercices and reference
to written source notes. The discussion is illustrated on the MPI On-line
Web based distance learning course developed at EPCC.</font>
<br>&nbsp;
<br>&nbsp;
</p><p><b><i><font face="Arial">Conclusions</font></i></b>
</p><p><font size="-1">We have presented a distributed on-line learning system
for collaborative learning based on artificial agents. The system supports
synchronous and asynchronous cooperation among learners, cooperation being
achieved either between the student and the tutor/expert or inside a group
of learners interacting or not with the tutor. The underlying learning
paradigm is based on a combination of the traditional teaching approach
with the “problem-centred” and “participative” one. The system comprises
a set of facilities to assist the learner at several levels of the knowledge
acquisition process: learning by being told, problem-centred demonstration,
problem analysis, and assessment of acquired knowledge. A fifth learning
modality in the system, namely the creative problem solving, is envisaged
as a future development.</font>
</p><p><font size="-1">The supporting technology is CSCW enhanced with the emerging
paradigm of intelligent human-computer interaction. The architecture of
the system is a multi-agent one, human and artificial agents collaborating
together to achieve the learning task. Among the agents in the system,
the Tutor Agent tries to partially replace the human teacher to synchronously
assist the students in the learning endeavour at the time of their convenience.</font>
</p><p><font size="-1">The distributed solution has the advantage of creating
an ODL environment to be joined by any interested learner. The system is
an effective response to the increased demand for cooperation and learning
in today's open environments, both academic and economic, and to the necessity
of developing effective learning tools that can be smoothly integrated
in the professional development process but also with company work.</font>
</p><p><font size="-1">The presented learning system is part of a collaborative
effort to develop a novel intelligent virtual environment for learning.
The system is under development at “Politehnica” University of Bucharest.</font>
</p><p><b><i><font face="Arial">References</font></i></b>
</p><dir>
<dir><font size="-1">[Flo94] Florea,A. The Automated Theorem Proving (ATP)
module of Portable AI Lab. The Summer School on “Computed Assisted Instruction
in Artificial Intelligence”. Organised by the Romanian Academy and the
Dalle Mole Foundation of Researches on Artificial Intelligence, Bucharest,
1-5 August, 1994.</font>
<p><font size="-1">[Flo99a] Florea, A. e. a. “Représentation logique des
connaissances pour les agent intelligents”, Grant AUPELF-UREF No. 11018/99,
in the framework of the "Université Virtuelle Francophone" Programme, 1999.
http://sunsite.pub.ro/uvf</font>
</p><p><font size="-1">[Flo99b] Florea, A. Le professeur virtuel: fiction ou
réalité? In Proc. of “Forum Initiatives 99 – Colloque Universités virtuelles,
vers un enseignement égalitaire”, Edmundston , 27-29 August, 1999 (to appear).</font>
</p><p><font size="-1">[FM96] Florea, A. and A. Moldovan. An Intelligent E-mail
Agent. In Proceedings of ROSE'96, the 4th Romanian Conference on Open Systems,
30 October -2 November, 1996, Bucuresti, pp .91-99.</font>
</p><p><font size="-1">[Gla89] von Glasersfeld, E.. Cognition, Construction of
Knowledge, and Teaching. Synthese, Vol. 80, 1989, pp.121-140.</font>
</p><p><font size="-1">[Llo84] Lloyd, J.W. Foundations of Logic Programming.
Springer Verlag, 1984.</font>
</p><p><font size="-1">[NS96] Norman, D. A. and J. D. Spohrer. Learner-centered
education. Communications of the ACM, Vol. 39, No. 4, 1996, p.24-27.</font>
</p><p><font size="-1">[Qui86] J.R. Quinlan. Introduction of decision trees.
Machine Learning, Vol.1, No.1, 1986, pp.81-106.</font>
</p><p><font size="-1">[Res87] Resnick, L.B.. Education and learning to think.
Washington, DC: National, Academy Press, 1987.</font></p></dir>
</dir>



</body></html>